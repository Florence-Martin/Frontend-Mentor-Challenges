name: Deploy to Vercel

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2 # Fetch only the last 2 commits to avoid issues if it's the first commit

      - name: Prevent duplicate Vercel deploys # Skip deployment if triggered by Vercel bot
        run: |
          if [[ "$GITHUB_ACTOR" == "vercel[bot]" ]]; then
            echo "Skipping deployment triggered by Vercel auto-deploy"
            exit 0 # Quitter proprement pour éviter le double déploiement
          fi

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Detect modified challenges
        id: detect_changes # Set an ID for this step to reference its outputs later
        run: |
          CHANGED_APPS=$(git diff --name-only HEAD^ HEAD | grep -E '^apps/' | cut -d'/' -f2 | sort -u || true)

          # Nettoyage de la variable pour supprimer les retours à la ligne
          CHANGED_APPS=$(echo "$CHANGED_APPS" | tr '\n' ' ' | xargs)

          if [ -z "$CHANGED_APPS" ]; then
            echo "No changes detected, skipping deployment."
            echo "APPS=" >> $GITHUB_ENV
          else
            echo "Changed apps: $CHANGED_APPS"
            echo "APPS=$CHANGED_APPS" >> $GITHUB_ENV
          fi

      - name: Deploy each modified challenge to Vercel
        if: env.APPS != '' # Only run this step if there are modified apps
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }} # Use the Vercel token from GitHub secrets
        run: |
          for challenge in $APPS; do
            if [ -d "apps/$challenge" ]; then
              echo "Deploying apps/$challenge..."
              cd "apps/$challenge" || exit 1  # Change to the app directory or exit if it fails
              npm install  # Install dependencies only for the specific app
              vercel --token $VERCEL_TOKEN --prod --yes  # Deploy the app to Vercel with the provided token
              cd ../..  # Return to the root directory
            else
              echo "Skipping non-existent directory: apps/$challenge"  # Skip if the directory does not exist
            fi
          done

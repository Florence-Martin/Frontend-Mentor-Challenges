name: Deploy to Vercel

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2 # Ã‰vite les problÃ¨mes si c'est le premier commit

      - name: Prevent duplicate Vercel deploys
        run: |
          if [ "$GITHUB_ACTOR" == "vercel[bot]" ]; then
            echo "Skipping deployment triggered by Vercel auto-deploy"
            exit 0
          fi

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Detect modified challenges
        id: detect_changes
        run: |
          CHANGED_APPS=$(git diff --name-only HEAD^ HEAD | grep -E '^apps/' | cut -d'/' -f2 | sort -u || true)
          if [ -z "$CHANGED_APPS" ]; then
            echo "No changes detected, skipping deployment."
            echo "APPS=" >> $GITHUB_ENV
          else
            echo "Changed apps: $CHANGED_APPS"
            echo "APPS=$CHANGED_APPS" >> $GITHUB_ENV
          fi

      - name: Deploy each modified challenge to Vercel
        if: env.APPS != ''
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          for challenge in $APPS; do
            if [ -d "apps/$challenge" ]; then
              echo "Deploying apps/$challenge..."
              cd "apps/$challenge" || exit 1
              npm install  # ðŸ”¹ Installe les dÃ©pendances uniquement pour lâ€™app concernÃ©e
              vercel --token $VERCEL_TOKEN --prod --yes
              cd ../..
            else
              echo "Skipping non-existent directory: apps/$challenge"
            fi
          done
